@model List<PlayerCards.Models.PlayerCard>

@{
    ViewData["Title"] = "All User Cards";
}

<style>
    body {
        background: #f7f8fc;
    }

    h2 {
        text-align: center;
        margin: 0 auto 2rem auto;
        font-weight: 700;
        font-size: 2rem;
        color: #2c3e50;
    }

    /* ----- Card grid styling ----- */
    .player-card {
        border: none;
        border-radius: 16px;
        box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
        transition: transform 0.25s ease, box-shadow 0.25s ease;
        background: #fff;
        overflow: hidden;
        height: 100%;
        max-width: 280px;
        margin: 0 auto;
    }

        .player-card:hover {
            transform: translateY(-6px);
            box-shadow: 0 10px 22px rgba(0, 0, 0, 0.15);
        }

        .player-card .card-img-top {
            height: 160px;
            width: 100%;
            object-fit: cover;
            border-bottom: 1px solid #eee;
        }

        .player-card .card-body {
            padding: 14px 16px;
        }

        .player-card .card-title {
            margin-bottom: 6px;
            font-weight: 600;
            font-size: 1.1rem;
            color: #222;
        }

        .player-card .card-text {
            font-size: 0.9rem;
            color: #555;
            min-height: 36px;
            margin-bottom: 10px;
        }

        .player-card .user-line {
            font-size: 0.8rem;
            color: #777;
            margin-bottom: 8px;
        }

    /* Offer badge */
    .offer-badge {
        position: absolute;
        top: 12px;
        right: 12px;
        background: #007bff;
        color: #fff;
        padding: 4px 10px;
        font-size: 0.75rem;
        font-weight: 600;
        border-radius: 20px;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
    }

    /* Price styling */
    .price-row {
        display: flex;
        align-items: center;
        gap: 8px;
        margin-top: 6px;
        margin-bottom: 4px;
    }

    .price-now {
        font-size: 1rem;
        font-weight: 700;
        color: #222;
    }

    .price-old {
        font-size: 0.85rem;
        color: #8c8c8c;
        text-decoration: line-through;
    }

    /* Footer buttons */
    .card-footer {
        padding: 10px 14px 14px 14px;
        text-align: center;
        border-top: 1px solid #eee;
        background: #fafafa;
    }

        .card-footer .btn {
            border-radius: 8px;
            font-size: 0.8rem;
            padding: 6px 14px;
            transition: background 0.2s ease;
        }

            .card-footer .btn:hover {
                background: #0056b3;
                color: #fff;
            }

    /* Search bar alignment */
    form.form-inline {
        max-width: 820px;
        margin: 0 auto 2rem auto;
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 12px;
    }

        form.form-inline .form-control-sm {
            width: 200px;
            border-radius: 8px;
        }

        form.form-inline .btn-sm {
            padding: 6px 14px;
            font-size: 0.85rem;
            border-radius: 8px;
        }
</style>

<div class="container">
    <h2>All User Cards</h2>

    <!-- Search + Filter -->
    <form method="get" asp-action="Index" class="form-inline">
        <input type="text" name="searchString" class="form-control form-control-sm"
               placeholder="Search by name" value="@ViewBag.SearchString" />
        <select name="offerFilter" class="form-control form-control-sm">
            <option value="">-- All Offers --</option>
            <option value="WithOffer" selected="@(ViewBag.OfferFilter?.ToString() == "WithOffer")">With Offer</option>
            <option value="WithoutOffer" selected="@(ViewBag.OfferFilter?.ToString() == "WithoutOffer")">Without Offer</option>
        </select>
        <button type="submit" class="btn btn-primary btn-sm">Search</button>
    </form>

    <div class="row">
        @foreach (var card in Model)
        {
            <div class="col-md-4 mb-4 d-flex">
                <div class="player-card w-100">
                    <div class="position-relative">
                        <img src="@card.ImagePath" class="card-img-top" alt="@card.Name" />
                        @if (!string.IsNullOrWhiteSpace(card.Offer))
                        {
                            <span class="offer-badge">Offer: @card.Offer</span>
                        }
                    </div>
                    <div class="card-body">
                        <h5 class="card-title">@card.Name</h5>
                        <p class="card-text">@card.Description</p>
                        <p class="user-line"><strong>User:</strong> @card.UserAccount?.UserName</p>

                        @if (!string.IsNullOrEmpty(card.Offer))
                        {
                            <div class="price-row">
                                <span class="price-now">
                                    @{
                                        if (decimal.TryParse(card.Offer, out decimal discount) && card.Price.HasValue)
                                        {
                                            var newPrice = card.Price.Value - discount;
                                            if (newPrice < 0) newPrice = 0;
                                            @newPrice.ToString("C")
                                        }
                                    }
                                </span>
                                <span class="price-old">@card.Price?.ToString("C")</span>
                            </div>
                        }
                        else
                        {
                            <div class="price-row">
                                <span class="price-now">@card.Price?.ToString("C")</span>
                            </div>
                        }
                    </div>
                    <div class="card-footer">
                        <button class="btn btn-primary"
                                data-toggle="modal"
                                data-target="#editCardModal"
                                onclick="openEditCard('@card.Id','@card.Name','@card.Description','@card.Offer')">
                            Edit
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
