@model List<PlayerCards.Entities.UserAccount>
@using Microsoft.AspNetCore.Identity

@{
    ViewData["Title"] = "User Management";
}

<div class="d-flex justify-content-start align-items-center mb-4 flex-wrap">
    <a asp-action="Create" class="btn btn-success mr-2">
        <i class="fas fa-plus"></i> Create New User
    </a>

    <a asp-action="Cards" class="btn btn-info mr-2">
        <i class="fas fa-id-card"></i> Manage User Cards
    </a>

    <a asp-controller="Home" asp-action="MostLiked" class="btn btn-danger mr-2">
        <i class="fas fa-heart"></i> Most Liked
    </a>

    <a asp-controller="Home" asp-action="MostInCart" class="btn btn-danger mr-2">
        <i class="fas fa-shopping-cart"></i> Most In Cart
    </a>


    <button type="button" class="btn btn-primary mr-2" " data-toggle="modal" data-target="#importUsersModal">
        <i class="fas fa-file-import"></i> Import Users
    </button>


    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#announcementModal">
        <i class="bi bi-megaphone"></i> Create Announcement
    </button>


</div>

<!-- Import Users Modal -->
<div class="modal fade" id="importUsersModal" tabindex="-1" role="dialog" aria-labelledby="importUsersModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <form asp-action="ImportUsers" method="post" enctype="multipart/form-data">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="importUsersModalLabel">Import Users</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <div class="modal-body text-center">
                    <div id="dropZone" class="import-box p-4 rounded">
                        <i class="fas fa-cloud-upload-alt fa-2x text-muted mb-3"></i>
                        <p class="mb-2">Drag & drop your file here, or</p>
                        <label class="btn btn-outline-primary">
                            Select File <input type="file" id="fileInput" name="file" hidden />
                        </label>
                    </div>

                    <div id="fileName" class="mt-2 text-muted"></div>

                    <div class="mt-3">
                        <a href="https://docs.google.com/spreadsheets/d/1_AYXRYWV_qfXKy6b3_2U_FaZ-2McxmrR9HaZLchRcSA/edit?usp=sharing" target="_blank" class="btn btn-link">
                            <i class="fas fa-file-excel"></i> Download Google Sheets Template
                        </a>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="submit" class="btn btn-success">Upload</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </form>
    </div>
</div>


<!-- Search Bar -->
<div class="card mb-4">
    <div class="card-body">
        <form asp-action="Dashboard" method="get" class="form-inline">
            <div class="input-group w-100">
                <input type="text" name="searchString" id="searchInput" class="form-control"
                       placeholder="Search by Username or Email..."
                       value="@(ViewData["CurrentFilter"] ?? "")" />

                <div class="input-group-append">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-search"></i> Search
                    </button>
                    <button type="button" class="btn btn-secondary ml-2" onclick="clearSearch()">Clear</button>
                </div>
            </div>
        </form>
    </div>
</div>


@if (ViewBag.Message != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle mr-2"></i>
        @ViewBag.Message
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

<div class="container-fluid">
    <!-- User Cards -->
    <div class="row">
        @foreach (var user in Model)
        {
            <div class="col-md-4 col-lg-3 mb-4">
                <div class="card h-100 user-card @(!user.IsActive ? "inactive-user" : "")">
                    <!-- Avatar + Username + Role -->
                    <div class="card-header d-flex align-items-center">
                        <img src="@(!string.IsNullOrEmpty(user.AvatarPath) ? Url.Content(user.AvatarPath) : Url.Content("~/Avatar/default-avatar.png"))"
                             class="avatar-img-sm mr-3" alt="Avatar of @user.UserName" />

                        <div>
                            <h5 class="card-title mb-0">@user.UserName</h5>
                            <span class="badge @(user.Role == "SuperAdmin" ? "bg-danger" : user.Role == "Admin" ? "bg-primary" : "bg-secondary")">
                                @user.Role
                            </span>
                        </div>
                    </div>

                    <!-- User Info -->
                    <div class="card-body">
                        <div class="user-info mb-3 text-center">
                            <p class="mb-1"><strong>Email:</strong> @user.Email</p>
                            <p class="mb-1">
                                <strong>Status:</strong>
                                <span class="@(user.IsActive ? "text-success" : "text-danger")">
                                    @(user.IsActive ? "Active" : "Inactive")
                                </span>
                            </p>
                        </div>
                    </div>

                    <!-- Action Buttons -->
                    <div class="card-footer bg-transparent">
                        <div class="d-flex flex-wrap justify-content-between">
                            <button class="btn btn-sm btn-primary mb-1"
                                    data-toggle="modal"
                                    data-target="#editUserModal"
                                    data-id="@user.Id"
                                    data-username="@user.UserName"
                                    data-email="@user.Email"
                                    data-role="@user.Role"
                                    data-active="@(user.IsActive.ToString().ToLower())"
                                    onclick="openEditModalFromBtn(this)">
                                <i class="fas fa-edit"></i>
                            </button>

                            @if (user.Role == "User")
                            {
                                <form asp-action="PromoteToAdmin" asp-route-id="@user.Id" method="post" class="mb-1">
                                    <button type="submit" class="btn btn-sm btn-info">
                                        <i class="fas fa-level-up-alt"></i>
                                    </button>
                                </form>
                            }

                            @if (user.IsActive)
                            {
                                <form asp-action="Deactivate" asp-route-id="@user.Id" method="post" class="mb-1">
                                    <button type="submit" class="btn btn-sm btn-warning">
                                        <i class="fas fa-user-slash"></i> Deactivate
                                    </button>
                                </form>
                            }
                            else
                            {
                                <form asp-action="Activate" asp-route-id="@user.Id" method="post" class="mb-1">
                                    <button type="submit" class="btn btn-sm btn-success">
                                        <i class="fas fa-user-check"></i> Activate
                                    </button>
                                </form>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div> <!-- /.row -->
    <!-- Pagination (outside .row) -->
    <div class="d-flex justify-content-center mt-4">
        @if (ViewBag.TotalPages > 1)
        {
            <nav aria-label="User pagination" class="mt-4 mb-5">
                <ul class="pagination">

                    <!-- First Page -->
                    <li class="page-item @(ViewBag.Page == 1 ? "disabled" : "")">
                        <a class="page-link" asp-action="Dashboard" asp-route-page="1" asp-route-searchString="@ViewData["CurrentFilter"]">
                            <i class="fas fa-angle-double-left"></i> First
                        </a>
                    </li>

                    <!-- Skip Back 10 -->
                    <li class="page-item @(ViewBag.Page <= 10 ? "disabled" : "")">
                        <a class="page-link" asp-action="Dashboard" asp-route-page="@(Math.Max(1, ViewBag.Page - 10))" asp-route-searchString="@ViewData["CurrentFilter"]">
                            <i class="fas fa-backward"></i> 10
                        </a>
                    </li>

                    <!-- Previous -->
                    <li class="page-item @(ViewBag.Page == 1 ? "disabled" : "")">
                        <a class="page-link" asp-action="Dashboard" asp-route-page="@(ViewBag.Page - 1)" asp-route-searchString="@ViewData["CurrentFilter"]">
                            <i class="fas fa-chevron-left"></i>
                        </a>
                    </li>

                    <!-- Page Numbers (small window) -->
                    @for (int i = Math.Max(1, ViewBag.Page - 2); i <= Math.Min(ViewBag.TotalPages, ViewBag.Page + 2); i++)
                    {
                        <li class="page-item @(i == ViewBag.Page ? "active" : "")">
                            <a class="page-link" asp-action="Dashboard" asp-route-page="@i" asp-route-searchString="@ViewData["CurrentFilter"]">@i</a>
                        </li>
                    }

                    <!-- Next -->
                    <li class="page-item @(ViewBag.Page == ViewBag.TotalPages ? "disabled" : "")">
                        <a class="page-link" asp-action="Dashboard" asp-route-page="@(ViewBag.Page + 1)" asp-route-searchString="@ViewData["CurrentFilter"]">
                            <i class="fas fa-chevron-right"></i>
                        </a>
                    </li>

                    <!-- Skip Forward 10 -->
                    <li class="page-item @(ViewBag.Page + 10 > ViewBag.TotalPages ? "disabled" : "")">
                        <a class="page-link" asp-action="Dashboard" asp-route-page="@(Math.Min(ViewBag.TotalPages, ViewBag.Page + 10))" asp-route-searchString="@ViewData["CurrentFilter"]">
                            10 <i class="fas fa-forward"></i>
                        </a>
                    </li>

                    <!-- Last Page -->
                    <li class="page-item @(ViewBag.Page == ViewBag.TotalPages ? "disabled" : "")">
                        <a class="page-link" asp-action="Dashboard" asp-route-page="@ViewBag.TotalPages" asp-route-searchString="@ViewData["CurrentFilter"]">
                            Last <i class="fas fa-angle-double-right"></i>
                        </a>
                    </li>

                </ul>
            </nav>
        }
    </div>

</div> <!-- /.container-fluid -->
<!-- Edit User Modal -->
<div class="modal fade" id="editUserModal" tabindex="-1" role="dialog" aria-labelledby="editUserModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <form method="post" asp-action="Edit">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editUserModalLabel">Edit User</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <div class="modal-body">
                    <input type="hidden" name="Id" id="editUserId" />

                    <div class="form-group">
                        <label>Username</label>
                        <input type="text" name="UserName" id="editUserName" class="form-control" required />
                    </div>

                    <div class="form-group">
                        <label>Email</label>
                        <input type="email" name="Email" id="editUserEmail" class="form-control" required />
                        </div>

                    <div class="form-group">
                        <label>Role</label>
                        <select name="Role" id="editUserRole" class="form-control">
                            <option value="User">User</option>
                            <option value="Admin">Admin</option>
                            <option value="SuperAdmin">SuperAdmin</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label>Status</label>
                        <select name="IsActive" id="editUserStatus" class="form-control">
                            <option value="true">Active</option>
                            <option value="false">Inactive</option>
                        </select>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Announcement Modal -->
<div class="modal fade" id="announcementModal" tabindex="-1" aria-labelledby="announcementModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-md modal-dialog-centered">
        <!--  Changed to modal-md for smaller width -->
        <div class="modal-content border-0 rounded-4 shadow-lg">
            <div class="modal-header bg-gradient text-white" style="background: linear-gradient(90deg, #007bff, #0056b3);">
                <h5 class="modal-title fw-semibold" id="announcementModalLabel">
                    <i class="bi bi-megaphone-fill me-2"></i> Create Announcement
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>

            <form asp-action="CreateAnnouncement" asp-controller="SuperAdmin" method="post" class="p-2">
                <div class="modal-body">
                    <!-- Title -->
                    <div class="mb-3">
                        <label class="form-label fw-semibold">Title</label>
                        <input type="text" name="Title" class="form-control rounded-3 border-0 shadow-sm" placeholder="Enter announcement title..." required />
                    </div>

                    <!-- Select Users -->
                    <div class="mb-3">
                        <label class="form-label fw-semibold">Select Users</label>
                        <select name="UserIds" class="form-select rounded-3 shadow-sm" multiple size="4" required>
                            @foreach (var user in ViewBag.Users as List<PlayerCards.Entities.UserAccount>)
                            {
                                if (user.Role != "SuperAdmin") // 👈 Exclude SuperAdmin
                                {
                                    <option value="@user.Id">
                                        @user.FirstName @user.LastName (@user.Email)
                                    </option>
                                }
                            }
                        </select>
                        <small class="text-muted fst-italic">Hold <strong>CTRL</strong> (or ⌘ on Mac) to select multiple users</small>
                    </div>

                    <!-- Content -->
                    <div class="mb-3">
                        <label class="form-label fw-semibold">Content</label>
                        <textarea id="announcementContent" name="Content" class="form-control rounded-3 shadow-sm" rows="4" placeholder="Write your announcement..." required></textarea>
                    </div>
                </div>

                <div class="modal-footer border-0 pt-0">
                    <button type="button" class="btn btn-secondary px-3 py-1 rounded-3 shadow-sm" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary px-3 py-1 rounded-3 shadow-sm">
                        <i class="bi bi-send-fill me-1"></i> Send
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- CKEditor -->
<script src="https://cdn.ckeditor.com/ckeditor5/41.3.1/classic/ckeditor.js"></script>
<script>
    ClassicEditor
        .create(document.querySelector('#announcementContent'))
        .catch(error => console.error(error));
</script>




@functions {
    string GetRoleBadgeClass(string role)
    {
        return role switch
        {
            "SuperAdmin" => "bg-danger",
            "Admin" => "bg-primary",
            _ => "bg-secondary",
        };
    }
}

@section Scripts {
    <script>
        function openEditModalFromBtn(btn) {
            // use dataset to avoid quoting problems
            var id = btn.getAttribute('data-id');
            var userName = btn.getAttribute('data-username');
            var email = btn.getAttribute('data-email');
            var role = btn.getAttribute('data-role');
            var isActive = btn.getAttribute('data-active');

            document.getElementById('editUserId').value = id;
            document.getElementById('editUserName').value = userName;
            document.getElementById('editUserEmail').value = email;
            document.getElementById('editUserRole').value = role;
            document.getElementById('editUserStatus').value = isActive;
        }

        function clearSearch() {
            document.getElementById("searchInput").value = "";
        }

    </script>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />

    <script>
        const dropZone = document.getElementById("dropZone");
        const fileInput = document.getElementById("fileInput");
        const fileName = document.getElementById("fileName");

        if (dropZone) {
            // Highlight on drag over
            dropZone.addEventListener("dragover", (e) => {
                e.preventDefault();
                dropZone.classList.add("drag-over");
            });

            dropZone.addEventListener("dragleave", () => {
                dropZone.classList.remove("drag-over");
            });

            // Handle file drop
            dropZone.addEventListener("drop", (e) => {
                e.preventDefault();
                dropZone.classList.remove("drag-over");

                if (e.dataTransfer.files.length) {
                    fileInput.files = e.dataTransfer.files;
                    fileName.innerText = `Selected: ${e.dataTransfer.files[0].name}`;
                }
            });
        }

        if (fileInput) {
            fileInput.addEventListener("change", () => {
                if (fileInput.files.length) {
                    fileName.innerText = `Selected: ${fileInput.files[0].name}`;
                }
            });
        }
    </script>

    <style>
        /* Ensure modal stays nicely centered */
        .modal-dialog {
            margin-top: auto;
            margin-bottom: auto;
        }

        /* Drag & Drop hover effect */
        .import-box.drag-over {
            border-color: #1890ff;
            background-color: #f0f8ff;
            box-shadow: 0 6px 16px rgba(24, 144, 255, 0.2);
        }

        /* Force modal to center horizontally & vertically */
        #importUsersModal .modal-dialog {
            display: flex;
            align-items: center;
            justify-content: center;
            min-height: calc(100% - 1rem);
        }

        #importUsersModal .modal-content {
            margin: auto;
        }

        body {
            background-color: #f5f7fa;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .container-fluid {
            padding: 30px;
        }

        h2 {
            font-weight: 600;
            color: #333;
        }

        .user-card {
            border: none;
            border-radius: 15px;
            box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
            transition: transform 0.2s, box-shadow 0.2s;
            background-color: white;
        }

            .user-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 6px 20px rgba(0, 0, 0, 0.12);
            }

        .card-header {
            background-color: transparent;
            border-bottom: none;
            padding-bottom: 0;
            font-size: 1.1rem;
            font-weight: 600;
        }

        .badge {
            padding: 0.4em 0.7em;
            font-size: 0.75rem;
            border-radius: 10px;
        }

        .card-body p {
            font-size: 0.9rem;
            color: #555;
        }

        .card-footer {
            border-top: none;
            padding-top: 0;
            background-color: transparent;
        }

        .btn {
            border-radius: 8px;
            font-size: 0.8rem;
        }

            .btn i {
                margin-right: 5px;
            }

        .inactive-user {
            opacity: 0.6;
        }

        .form-control {
            border-radius: 10px;
            font-size: 0.9rem;
        }

        .input-group .btn {
            border-radius: 0 10px 10px 0 !important;
        }

        .input-group .form-control {
            border-radius: 10px 0 0 10px;
        }

        /* Modal */
        .modal-content {
            border-radius: 15px;
        }

        .modal-header, .modal-footer {
            border: none;
        }

        /* Role badge colors */
        .bg-danger {
            background-color: #ff4d4f !important;
        }

        .bg-primary {
            background-color: #1890ff !important;
        }

        .bg-secondary {
            background-color: #8c8c8c !important;
        }

        .btn-success, .btn-primary, .btn-warning, .btn-info {
            color: white;
        }

        .btn-success {
            background-color: #52c41a;
            border-color: #52c41a;
        }

        .btn-info {
            background-color: #13c2c2;
            border-color: #13c2c2;
        }

        .btn-warning {
            background-color: #faad14;
            border-color: #faad14;
        }

        .btn-primary {
            background-color: #1890ff;
            border-color: #1890ff;
        }

        .btn-secondary {
            background-color: #595959;
            border-color: #595959;
        }

        .mb-1 {
            margin-bottom: 5px !important;
        }

        .avatar-img-sm {
            width: 50px;
            height: 50px;
            object-fit: cover;
            border-radius: 50%;
            border: 2px solid #dee2e6;
        }

        .import-box {
            background: #fff;
            border: 2px dashed #d9d9d9;
            transition: all 0.3s ease;
            cursor: pointer;
            max-width: 400px;
            margin: 0 auto; /* centers it */
        }

            .import-box:hover {
                border-color: #1890ff;
                background-color: #f9fbfd;
                transform: translateY(-2px);
                box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
            }

        .pagination .page-link {
            border-radius: 8px;
            margin: 0 3px;
            color: #1890ff;
        }

        .pagination .active .page-link {
            background-color: #1890ff;
            border-color: #1890ff;
            color: #fff;
        }

        .pagination .disabled .page-link {
            color: #999;
            pointer-events: none;
            background-color: #f5f5f5;
        }


        .modal.fade .modal-dialog {
            transform: scale(0.9);
            transition: all 0.2s ease-in-out;
        }

        .modal.show .modal-dialog {
            transform: scale(1);
        }

    </style>
}
